<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置springMVC -->
    <!-- 1.开启springMVC注解模式-->
    <!-- 简化配置:
        (1)自动注册DefaultAnnotationHandlerMapping(URL的Handler映射采用注解的方式),
            AnnotationMethodHandlerAdapter(基于注解方法的适配器)
        (2)提供一系列：数据绑定，数字和日期的format @NumberFormat, @DataTimeFormat,
            xml,json默认读写支持
      -->
    <mvc:annotation-driven />

    <!-- servlet-mapping 映射路径： "/" -->
    <!-- 2.静态资源默认servlet配置
        1.加入静态资源的处理：jsp,gif,png...
        2.允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>

    <!-- 3.配置jsp 显示ViewResolver视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 4.扫描web相关的包 -->
    <!-- 将自己开发的Controller自动放到spring容器中(IOC) -->
    <context:component-scan base-package="com.gao.controller" />

</beans>